/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.tec02.view;

import com.tec02.common.Keyword;
import com.tec02.API.APIController;
import com.tec02.Jmodel.Component.MyListTabel;
import com.tec02.gui.frameGui.ConfigGui;
import com.tec02.common.PropertiesModel;
import com.tec02.gui.frameGui.AbsDisplayAble;
import com.tec02.gui.panelGui.UserInfomation;
import java.awt.HeadlessException;

/**
 *
 * @author Administrator
 */
public class Gui extends AbsDisplayAble {

    private final ManagePc managePc;
    private final APIController api;
    private final ConfigGui configGui;
    private final ManageFgroup manageFgroup;
    private final ManageFileProgram manageFileProgram;
    private final ManageProgram manageProgram;
    private final MyListTabel<Runnable> listTabel;
    private final UserInfomation userInfomation;

    /**
     * Creates new form Gui
     *
     * @throws java.io.IOException
     */
    public Gui() throws Exception {
        initComponents();
        this.api = APIController.getInstance();
        this.configGui = new ConfigGui(api);
        this.managePc = new ManagePc();
        this.manageFgroup = new ManageFgroup();
        this.manageFileProgram = new ManageFileProgram();
        this.userInfomation = new UserInfomation(api);
        this.pnUser.add(this.userInfomation);
        this.manageProgram = new ManageProgram();
        this.listTabel = new MyListTabel(jList1);
        this.listTabel.addItem(new Runnable() {
            @Override
            public void run() {
                managerProduct();
            }

            @Override
            public String toString() {
                return "Manager Product";
            }
        });
        this.listTabel.addItem(new Runnable() {
            @Override
            public void run() {
                managerStation();
            }

            @Override
            public String toString() {
                return "Manager Station";
            }
        });
        this.listTabel.addItem(new Runnable() {
            @Override
            public void run() {
                managerLine();
            }

            @Override
            public String toString() {
                return "Manager Line";
            }
        });
        this.listTabel.addItem(new Runnable() {
            @Override
            public void run() {
                managePc.display();
            }

            @Override
            public String toString() {
                return "Manager PC";
            }
        });
        this.listTabel.addItem(new Runnable() {
            @Override
            public void run() {
                manageFgroup.display();
            }

            @Override
            public String toString() {
                return "Manager Group";
            }
        });
        this.listTabel.addItem(new Runnable() {
            @Override
            public void run() {
                manageFileProgram.display();
            }

            @Override
            public String toString() {
                return "Manager File Program";
            }
        });
        this.listTabel.addItem(new Runnable() {
            @Override
            public void run() {
                manageProgram.display();
            }

            @Override
            public String toString() {
                return "Manager App";
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        pnUser = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mniProduct = new javax.swing.JMenuItem();
        mniStation = new javax.swing.JMenuItem();
        mniLine = new javax.swing.JMenuItem();
        mniManagePC = new javax.swing.JMenuItem();
        mnItemFileProgram = new javax.swing.JMenuItem();
        mnItemFileGroup = new javax.swing.JMenuItem();
        mnManageProgram = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Upload");
        setResizable(false);

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        pnUser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnUser.setLayout(new javax.swing.BoxLayout(pnUser, javax.swing.BoxLayout.LINE_AXIS));

        jMenu1.setText("File");

        mniProduct.setText("Manage Product");
        mniProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniProductActionPerformed(evt);
            }
        });
        jMenu1.add(mniProduct);

        mniStation.setText("Manage Station");
        mniStation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniStationActionPerformed(evt);
            }
        });
        jMenu1.add(mniStation);

        mniLine.setText("Manage Line");
        mniLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniLineActionPerformed(evt);
            }
        });
        jMenu1.add(mniLine);

        mniManagePC.setText("Manage PC");
        mniManagePC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniManagePCActionPerformed(evt);
            }
        });
        jMenu1.add(mniManagePC);

        mnItemFileProgram.setText("Manage file-program");
        mnItemFileProgram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnItemFileProgramActionPerformed(evt);
            }
        });
        jMenu1.add(mnItemFileProgram);

        mnItemFileGroup.setText("Manage File-Group");
        mnItemFileGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnItemFileGroupActionPerformed(evt);
            }
        });
        jMenu1.add(mnItemFileGroup);

        mnManageProgram.setText("Manage program");
        mnManageProgram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnManageProgramActionPerformed(evt);
            }
        });
        jMenu1.add(mnManageProgram);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnUser, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnUser, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mniProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniProductActionPerformed
        managerProduct();
    }//GEN-LAST:event_mniProductActionPerformed

    private void managerProduct() throws HeadlessException {
        // TODO add your handling code here:
        this.configGui.reset();
        this.configGui.display("Manager product");
        this.configGui.setAddUrl(PropertiesModel.getConfig(Keyword.Url.Product.POST), "name");
        this.configGui.setGetUrl(PropertiesModel.getConfig(Keyword.Url.Product.GET));
        this.configGui.setDeleteUrl(PropertiesModel.getConfig(Keyword.Url.Product.DELETE));
        this.configGui.getList();
    }


    private void mniStationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniStationActionPerformed
        managerStation();
    }//GEN-LAST:event_mniStationActionPerformed

    private void managerStation() throws HeadlessException {
        // TODO add your handling code here:
        this.configGui.reset();
        this.configGui.display("Manager staion");
        this.configGui.setAddUrl(PropertiesModel.getConfig(Keyword.Url.Station.POST), "name");
        this.configGui.setGetUrl(PropertiesModel.getConfig(Keyword.Url.Station.GET));
        this.configGui.setDeleteUrl(PropertiesModel.getConfig(Keyword.Url.Station.DELETE));
        this.configGui.getList();
    }

    private void mniLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniLineActionPerformed
        managerLine();
    }//GEN-LAST:event_mniLineActionPerformed

    private void managerLine() throws HeadlessException {
        // TODO add your handling code here:
        this.configGui.reset();
        this.configGui.display("Manager line");
        this.configGui.setAddUrl(PropertiesModel.getConfig(Keyword.Url.Line.POST), "name");
        this.configGui.setGetUrl(PropertiesModel.getConfig(Keyword.Url.Line.GET));
        this.configGui.setDeleteUrl(PropertiesModel.getConfig(Keyword.Url.Line.DELETE));
        this.configGui.getList();
    }

    private void mniManagePCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniManagePCActionPerformed
        // TODO add your handling code here:
        this.managePc.display();
    }//GEN-LAST:event_mniManagePCActionPerformed

    private void mnItemFileGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnItemFileGroupActionPerformed
        // TODO add your handling code here:
        this.manageFgroup.display();
    }//GEN-LAST:event_mnItemFileGroupActionPerformed

    private void mnManageProgramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnManageProgramActionPerformed
        // TODO add your handling code here:
        this.manageProgram.display();
    }//GEN-LAST:event_mnManageProgramActionPerformed

    private void mnItemFileProgramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnItemFileProgramActionPerformed
        // TODO add your handling code here:
        this.manageFileProgram.display();
    }//GEN-LAST:event_mnItemFileProgramActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() < 2){
            return;
        }
        var item = this.listTabel.getSelectioned();
        if(item == null){
            return;
        }
        item.run();
    }//GEN-LAST:event_jList1MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> jList1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem mnItemFileGroup;
    private javax.swing.JMenuItem mnItemFileProgram;
    private javax.swing.JMenuItem mnManageProgram;
    private javax.swing.JMenuItem mniLine;
    private javax.swing.JMenuItem mniManagePC;
    private javax.swing.JMenuItem mniProduct;
    private javax.swing.JMenuItem mniStation;
    private javax.swing.JPanel pnUser;
    // End of variables declaration//GEN-END:variables

    public void display() {
        this.display("store");
    }
}
